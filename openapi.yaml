openapi: 3.0.0
info:
  version: 0.0.1
  title: WWI16AMA - Spec
  license:
    name: APL 2
servers:
  - url: 'tbd'
paths:
  /members:
    get:
      summary: List of all members
      operationId: listMembers
      tags:
        - members
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/members'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a member
      operationId: createMembers
      requestBody:
        description: Member to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      tags:
        - members
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/pets/{petId}':
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - members
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Member:
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dob:
          type: string
          format: date
        sex:
          type: string
        status:
          type: string
          enum: [active, passive, honoraryMember]
        email:
          type: string
          format: email
        address:
          $ref: '#/components/schemas/Address'
        bankingAccount:
          type: string
        admissioned:
          type: boolean
        memberBankingAccount:
          type: string
        offices:
          type: array
          items:
            type: string
        flightAuthorization:
          type: array
          items:
            type: object
            properties:
              authorization:
                type: string
              expires:
                type: string
                format: date
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Address:
      properties:
        postalCode:
          type: integer
          format: int32
        streetAddress:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string